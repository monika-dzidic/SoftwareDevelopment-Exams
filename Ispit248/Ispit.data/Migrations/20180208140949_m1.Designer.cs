// <auto-generated />
using Ispit.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Ispit.data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20180208140949_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ispit.data.Models.AkcijskiKatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Kraj");

                    b.Property<string>("Opis");

                    b.Property<DateTime>("Pocetak");

                    b.HasKey("Id");

                    b.ToTable("AkcijskiKatalog");
                });

            modelBuilder.Entity("Ispit.data.Models.Faktura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datum");

                    b.Property<int>("KlijentID");

                    b.HasKey("Id");

                    b.HasIndex("KlijentID");

                    b.ToTable("Faktura");
                });

            modelBuilder.Entity("Ispit.data.Models.FakturaStavka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FakturaID");

                    b.Property<float>("Kolicina");

                    b.Property<float>("PopustProcenat");

                    b.Property<int>("ProizvodID");

                    b.HasKey("Id");

                    b.HasIndex("FakturaID");

                    b.HasIndex("ProizvodID");

                    b.ToTable("FakturaStavka");
                });

            modelBuilder.Entity("Ispit.data.Models.KatalogStavka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AkcijskiKatalogId");

                    b.Property<float>("PopustProcenat");

                    b.Property<int>("ProizvodId");

                    b.HasKey("Id");

                    b.HasIndex("AkcijskiKatalogId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("KatalogStavka");
                });

            modelBuilder.Entity("Ispit.data.Models.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ImePrezime");

                    b.HasKey("Id");

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("Ispit.data.Models.Ponuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Datum");

                    b.Property<int?>("FakturaID");

                    b.Property<int>("KlijentId");

                    b.HasKey("Id");

                    b.HasIndex("FakturaID");

                    b.HasIndex("KlijentId");

                    b.ToTable("Ponuda");
                });

            modelBuilder.Entity("Ispit.data.Models.PonudaStavka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Kolicina");

                    b.Property<int>("PonudaId");

                    b.Property<float>("PopustProcenat");

                    b.Property<int>("ProizvodId");

                    b.HasKey("Id");

                    b.HasIndex("PonudaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("PonudaStavka");
                });

            modelBuilder.Entity("Ispit.data.Models.Proizvod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Cijena");

                    b.Property<string>("Naziv");

                    b.HasKey("Id");

                    b.ToTable("Proizvod");
                });

            modelBuilder.Entity("Ispit.data.Models.Faktura", b =>
                {
                    b.HasOne("Ispit.data.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ispit.data.Models.FakturaStavka", b =>
                {
                    b.HasOne("Ispit.data.Models.Faktura", "Faktura")
                        .WithMany()
                        .HasForeignKey("FakturaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ispit.data.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ispit.data.Models.KatalogStavka", b =>
                {
                    b.HasOne("Ispit.data.Models.AkcijskiKatalog", "AkcijskiKatalog")
                        .WithMany()
                        .HasForeignKey("AkcijskiKatalogId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ispit.data.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ispit.data.Models.Ponuda", b =>
                {
                    b.HasOne("Ispit.data.Models.Faktura", "Faktura")
                        .WithMany()
                        .HasForeignKey("FakturaID");

                    b.HasOne("Ispit.data.Models.Klijent", "Klijent")
                        .WithMany()
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ispit.data.Models.PonudaStavka", b =>
                {
                    b.HasOne("Ispit.data.Models.Ponuda", "Ponuda")
                        .WithMany()
                        .HasForeignKey("PonudaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ispit.data.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
