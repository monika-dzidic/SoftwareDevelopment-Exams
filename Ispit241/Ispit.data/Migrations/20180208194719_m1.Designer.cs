// <auto-generated />
using Ispit.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Ispit.data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20180208194719_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ispit.data.Models.Angazovan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NastavnikId");

                    b.Property<int?>("OdjeljenjeId");

                    b.Property<int?>("PredmetId");

                    b.HasKey("Id");

                    b.HasIndex("NastavnikId");

                    b.HasIndex("OdjeljenjeId");

                    b.HasIndex("PredmetId");

                    b.ToTable("Angazovan");
                });

            modelBuilder.Entity("Ispit.data.Models.Nastavnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ime");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Nastavnik");
                });

            modelBuilder.Entity("Ispit.data.Models.Odjeljenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("NastavnikId");

                    b.Property<string>("Oznaka");

                    b.Property<int>("Razred");

                    b.HasKey("Id");

                    b.HasIndex("NastavnikId");

                    b.ToTable("Odjeljenje");
                });

            modelBuilder.Entity("Ispit.data.Models.OdrzaniCas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AngazovanId");

                    b.Property<DateTime>("Datum");

                    b.HasKey("Id");

                    b.HasIndex("AngazovanId");

                    b.ToTable("OdrzaniCas");
                });

            modelBuilder.Entity("Ispit.data.Models.OdrzaniCasDetalj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("Ocjena");

                    b.Property<int>("OdrzaniCasId");

                    b.Property<bool>("Odsutan");

                    b.Property<bool?>("OpravdanoOdsutan");

                    b.Property<int>("UpisUOdjeljenjeId");

                    b.HasKey("Id");

                    b.HasIndex("OdrzaniCasId");

                    b.HasIndex("UpisUOdjeljenjeId");

                    b.ToTable("OdrzaniCasDetalj");
                });

            modelBuilder.Entity("Ispit.data.Models.Predmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Naziv");

                    b.HasKey("Id");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("Ispit.data.Models.Ucenik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ime");

                    b.HasKey("Id");

                    b.ToTable("Ucenik");
                });

            modelBuilder.Entity("Ispit.data.Models.UpisUOdjeljenje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BrojUDnevniku");

                    b.Property<int>("OdjeljenjeId");

                    b.Property<int>("UcenikId");

                    b.HasKey("Id");

                    b.HasIndex("OdjeljenjeId");

                    b.HasIndex("UcenikId");

                    b.ToTable("UpisUOdjeljenje");
                });

            modelBuilder.Entity("Ispit.data.Models.Angazovan", b =>
                {
                    b.HasOne("Ispit.data.Models.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId");

                    b.HasOne("Ispit.data.Models.Odjeljenje", "Odjeljenje")
                        .WithMany()
                        .HasForeignKey("OdjeljenjeId");

                    b.HasOne("Ispit.data.Models.Predmet", "Predmet")
                        .WithMany()
                        .HasForeignKey("PredmetId");
                });

            modelBuilder.Entity("Ispit.data.Models.Odjeljenje", b =>
                {
                    b.HasOne("Ispit.data.Models.Nastavnik", "Nastavnik")
                        .WithMany()
                        .HasForeignKey("NastavnikId");
                });

            modelBuilder.Entity("Ispit.data.Models.OdrzaniCas", b =>
                {
                    b.HasOne("Ispit.data.Models.Angazovan", "Angazovan")
                        .WithMany()
                        .HasForeignKey("AngazovanId");
                });

            modelBuilder.Entity("Ispit.data.Models.OdrzaniCasDetalj", b =>
                {
                    b.HasOne("Ispit.data.Models.OdrzaniCas", "OdrzaniCas")
                        .WithMany()
                        .HasForeignKey("OdrzaniCasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ispit.data.Models.UpisUOdjeljenje", "UpisUOdjeljenje")
                        .WithMany()
                        .HasForeignKey("UpisUOdjeljenjeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ispit.data.Models.UpisUOdjeljenje", b =>
                {
                    b.HasOne("Ispit.data.Models.Odjeljenje", "Odjeljenje")
                        .WithMany()
                        .HasForeignKey("OdjeljenjeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Ispit.data.Models.Ucenik", "Ucenik")
                        .WithMany()
                        .HasForeignKey("UcenikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
